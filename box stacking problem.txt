  struct box
    {
        int l,w,h;
    };
    static bool comp(box x,box y)
    {
        if((x.w)*(x.l) > (y.w)*(y.l))
         return 1;
         
          return 0;
    }
    int maxHeight(int height[],int width[],int length[],int n)
    {
        int i,j;
        
        box a[3*n];
        j=0;
        for(i=0;i<n;i++)
        {
            a[j].h=height[i];
            a[j].w=max(width[i],length[i]);
            a[j].l=min(width[i],length[i]);
             j++;
             a[j].h=width[i];
            a[j].w=max(height[i],length[i]);
            a[j].l=min(height[i],length[i]);
             j++;
             a[j].h=length[i];
            a[j].w=max(width[i],height[i]);
            a[j].l=min(width[i],height[i]);
             j++;
             
        }
        int k=3*n;
        sort(a,a+k,comp);
        
        int lis[3*n];
         
        for(i=0;i<3*n;i++)
         lis[i]=a[i].h;
        for(i=1;i<3*n;i++)
        {
            for(j=0;j<i;j++)
            {
                if(a[i].w<a[j].w  && a[i].l<a[j].l && lis[i]<lis[j]+a[i].h)
                  lis[i]=lis[j]+a[i].h;
            }
        }
        return *max_element(lis,lis+(3*n));
         
    }